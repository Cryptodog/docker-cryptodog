###
###              ejabberd configuration file
###
### The parameters used in this configuration file are explained at
###
###       https://docs.ejabberd.im/admin/configuration
###
### The configuration file is written in YAML.
### *******************************************************
### *******           !!! WARNING !!!               *******
### *******     YAML IS INDENTATION SENSITIVE       *******
### ******* MAKE SURE YOU INDENT SECTIONS CORRECTLY *******
### *******************************************************
### Refer to http://en.wikipedia.org/wiki/YAML for the brief description.
###

hosts:
  - "{EJABBERD_HOSTNAME}"

loglevel: info

## If you already have certificates, list them here
# certfiles:
#  - /etc/letsencrypt/live/domain.tld/fullchain.pem
#  - /etc/letsencrypt/live/domain.tld/privkey.pem

listen:
  -
    port: 5280
    ip: "::"
    module: ejabberd_http
    tls: false
    request_handlers:
      /websocket: ejabberd_http_ws
    web_admin: false
    register: false
    captcha: false

auth_method: anonymous
anonymous_protocol: both
allow_multiple_connections: true

acl:
  local:
    user_regexp: ""
  loopback:
    ip:
      - 127.0.0.0/8
      - ::1/128

access_rules:
  local:
    allow: local
  c2s:
    deny: blocked
    allow: all
  announce:
    allow: admin
  configure:
    allow: admin
  muc_create:
    allow: local
  pubsub_createnode:
    allow: local
  trusted_network:
    allow: loopback

api_permissions:
  "console commands":
    from:
      - ejabberd_ctl
    who: all
    what: "*"
  "admin access":
    who:
      access:
        allow:
          - acl: loopback
          - acl: admin
      oauth:
        scope: "ejabberd:admin"
        access:
          allow:
            - acl: loopback
            - acl: admin
    what:
      - "*"
      - "!stop"
      - "!start"
  "public commands":
    who:
      ip: 127.0.0.1/8
    what:
      - status
      - connected_users_number

shaper:
  normal:
    rate: 3000
    burst_size: 20000
  fast: 100000

shaper_rules:
  max_user_sessions: 10
  max_user_offline_messages:
    5000: admin
    100: all
  c2s_shaper:
    none: admin
    normal: all
  s2s_shaper: fast

modules:
  #mod_adhoc: {}
  mod_admin_extra: {}
  #mod_announce:
    #access: announce
  #mod_avatar: {}
  #mod_blocking: {}
  #mod_bosh: {}
  #mod_caps: {}
  #mod_carboncopy: {}
  #mod_client_state: {}
  #mod_configure: {}
  #mod_disco: {}
  #mod_fail2ban: {}
  #mod_http_api: {}
  #mod_http_upload:
    #put_url: https://@HOST@:5443/upload
    #custom_headers:
      #"Access-Control-Allow-Origin": "https://@HOST@"
      #"Access-Control-Allow-Methods": "GET,HEAD,PUT,OPTIONS"
      #"Access-Control-Allow-Headers": "Content-Type"
  #mod_last: {}
  #mod_mam:
    ## Mnesia is limited to 2GB, better to use an SQL backend
    ## For small servers SQLite is a good fit and is very easy
    ## to configure. Uncomment this when you have SQL configured:
    ## db_type: sql
    #assume_mam_usage: true
    #default: always
  #mod_mqtt: {}
  mod_muc:
    access:
      - allow
    access_admin: none
    access_create: all
    access_mam: none
    access_persistent: none
    min_message_interval: 0.100
    min_presence_interval: 2
    history_size: 0
    default_room_options: {
      mam: false,
      allow_change_subj: false,
      allow_private_messages: true,
      allow_query_users: true,
      allow_user_invites: false,
      allow_visitor_nickchange: false,
      anonymous: true,
      captcha_protected: false,
      logging: false,
      members_by_default: false,
      members_only: false,
      moderated: false,
      password_protected: false,
      persistent: false,
      public: false,
      public_list: false
    }
  mod_muc_admin: {}
  #mod_offline:
    #access_max_user_messages: max_user_offline_messages
  mod_ping:
    send_pings: true
    ping_interval: 15
    ping_ack_timeout: 30
    timeout_action: kill
  #mod_privacy: {}
  #mod_private: {}
  #mod_proxy65:
    #access: local
    #max_connections: 5
  #mod_pubsub:
    #access_createnode: pubsub_createnode
    #plugins:
      #- flat
      #- pep
    #force_node_config:
      ## Avoid buggy clients to make their bookmarks public
      #storage:bookmarks:
        #access_model: whitelist
  #mod_push: {}
  #mod_push_keepalive: {}
  #mod_register:
    ## Only accept registration requests from the "trusted"
    ## network (see access_rules section above).
    ## Think twice before enabling registration from any
    ## address. See the Jabber SPAM Manifesto for details:
    ## https://github.com/ge0rg/jabber-spam-fighting-manifesto
    #ip_access: trusted_network
  #mod_roster:
    #versioning: true
  #mod_s2s_dialback: {}
  #mod_shared_roster: {}
  #mod_stream_mgmt:
    #resend_on_timeout: if_offline
  #mod_stun_disco: {}
  #mod_vcard: {}
  #mod_vcard_xupdate: {}
  #mod_version:
    #show_os: false

### Local Variables:
### mode: yaml
### End:
### vim: set filetype=yaml tabstop=8
